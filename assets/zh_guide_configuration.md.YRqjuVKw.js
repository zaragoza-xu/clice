import{_ as t,c as o,o as d,ae as c}from"./chunks/framework.D8webtH5.js";const u=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/configuration.md","filePath":"zh/guide/configuration.md"}'),a={name:"zh/guide/configuration.md"};function r(i,e,l,n,h,p){return d(),o("div",null,e[0]||(e[0]=[c('<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><p>这是 <code>clice.toml</code> 的文档。</p><h2 id="project" tabindex="-1">Project <a class="header-anchor" href="#project" aria-label="Permalink to &quot;Project&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>project.cache_dir</code></td><td><code>string</code></td><td><code>&quot;${workspace}/.clice/cache&quot;</code></td></tr></tbody></table><p>用于储存 PCH 和 PCM 缓存的文件夹。 <br></p><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>project.index_dir</code></td><td><code>string</code></td><td><code>&quot;${workspace}/.clice/index&quot;</code></td></tr></tbody></table><p>用于储存索引文件的文件夹。 <br></p><h2 id="rule" tabindex="-1">Rule <a class="header-anchor" href="#rule" aria-label="Permalink to &quot;Rule&quot;">​</a></h2><p><code>[[rules]]</code> 表示一个对象数组，其中每个对象都拥有下面这些属性 <br></p><table tabindex="0"><thead><tr><th>名称</th><th>类型</th></tr></thead><tbody><tr><td><code>[rules].patterns</code></td><td><code>array</code> of <code>string</code></td></tr></tbody></table><p>用于匹配文件路径的 glob patterns，遵循 LSP 的 <a href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#documentFilter" target="_blank" rel="noreferrer">标准</a>。</p><ul><li><code>*</code>: 匹配路径段中的一个或多个字符。</li><li><code>?</code>: 匹配路径段中的单个字符。</li><li><code>**</code>: 匹配任意数量的路径段，包括零个。</li><li><code>{}</code>: 用于分组条件 (例如，<code>**/*.{ts,js}</code> 匹配所有 TypeScript 和 JavaScript 文件)。</li><li><code>[]</code>: 声明要匹配的路径段中的字符范围 (例如，<code>example.[0-9]</code> 匹配 <code>example.0</code>, <code>example.1</code> 等)。</li><li><code>[!...]</code>: 排除要匹配的路径段中的字符范围 (例如，<code>example.[!0-9]</code> 匹配 <code>example.a</code>, <code>example.b</code>，但不匹配 <code>example.0</code>)。 <br></li></ul><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>[rules].append</code></td><td><code>array</code> of <code>string</code></td><td><code>[]</code></td></tr></tbody></table><p>追加到原始命令列表中的命令。例如，<code>append = [&quot;-std=c++17&quot;]</code>。 <br></p><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>[rules].remove</code></td><td><code>array</code> of <code>string</code></td><td><code>[]</code></td></tr></tbody></table><p>从原始命令列表中移除的命令。例如，<code>remove = [&quot;-std=c++11&quot;]</code>。 <br></p>',16)]))}const b=t(a,[["render",r]]);export{u as __pageData,b as default};
